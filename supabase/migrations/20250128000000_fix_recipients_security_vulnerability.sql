-- Fix critical security vulnerability in recipients table RLS policies
-- Date: 2025-01-28
-- Description: The July 24th migration created dangerous policies that reference non-existent user_id column
--              This migration fixes the recipients table security by implementing proper RLS policies

-- =============================================================================
-- CRITICAL SECURITY FIX FOR RECIPIENTS TABLE
-- =============================================================================

-- Ensure RLS is enabled on recipients table
ALTER TABLE public.recipients ENABLE ROW LEVEL SECURITY;

-- Drop the dangerous policies created in 20250724000000_add_rls_policies.sql
-- These policies reference user_id which doesn't exist in recipients table
DROP POLICY IF EXISTS "Usuários podem ver apenas seus próprios destinatários" ON public.recipients;
DROP POLICY IF EXISTS "Usuários podem inserir seus próprios destinatários" ON public.recipients;
DROP POLICY IF EXISTS "Usuários podem atualizar seus próprios destinatários" ON public.recipients;
DROP POLICY IF EXISTS "Administradores podem ver todos os destinatários" ON public.recipients;

-- Drop any other potentially dangerous policies
DROP POLICY IF EXISTS "Public read access" ON public.recipients;
DROP POLICY IF EXISTS "Allow read access to all" ON public.recipients;
DROP POLICY IF EXISTS "Users can only see their own recipients" ON public.recipients;
DROP POLICY IF EXISTS "recipients_keepsake_owner_access" ON public.recipients;
DROP POLICY IF EXISTS "recipients_admin_full_access" ON public.recipients;
DROP POLICY IF EXISTS "Users can view recipients of their keepsakes" ON public.recipients;
DROP POLICY IF EXISTS "Users can insert recipients for their keepsakes" ON public.recipients;
DROP POLICY IF EXISTS "Users can manage recipients for their keepsakes" ON public.recipients;
DROP POLICY IF EXISTS "Admins can manage all recipients" ON public.recipients;

-- Create secure policies for recipients table
-- IMPORTANT: Recipients table has keepsake_id, not user_id
-- Users can only access recipients for keepsakes they own
CREATE POLICY "recipients_secure_keepsake_owner_access" ON public.recipients
  FOR ALL USING (
    EXISTS (
      SELECT 1 FROM public.keepsakes 
      WHERE keepsakes.id = recipients.keepsake_id 
      AND keepsakes.user_id = auth.uid()
    )
  );

-- Admins can access all recipients
CREATE POLICY "recipients_secure_admin_full_access" ON public.recipients
  FOR ALL USING (
    EXISTS (
      SELECT 1 FROM public.admin_roles 
      WHERE user_id = auth.uid() AND role = 'admin'
    )
  );

-- =============================================================================
-- VERIFICATION QUERIES (for manual testing)
-- =============================================================================

-- To verify the fix works correctly, run these queries after applying the migration:
--
-- 1. Check if RLS is enabled:
-- SELECT schemaname, tablename, rowsecurity 
-- FROM pg_tables 
-- WHERE tablename = 'recipients';
--
-- 2. List all policies for recipients table:
-- SELECT schemaname, tablename, policyname, permissive, roles, cmd, qual 
-- FROM pg_policies 
-- WHERE tablename = 'recipients';
--
-- 3. Test access control (should only return recipients for user's keepsakes):
-- SELECT r.* 
-- FROM recipients r
-- JOIN keepsakes k ON r.keepsake_id = k.id
-- WHERE k.user_id = auth.uid();

-- =============================================================================
-- SECURITY NOTES
-- =============================================================================

-- The recipients table contains highly sensitive personal data:
-- - Full names (name column)
-- - Email addresses (email column) 
-- - Phone numbers (phone column)
-- - Physical addresses (street, city, postal_code, country columns)
--
-- This data MUST be protected with proper RLS policies to prevent:
-- - Identity theft
-- - Fraud
-- - Harassment
-- - Spam campaigns
-- - Physical targeting
--
-- Only keepsake owners and system administrators should have access to this data.